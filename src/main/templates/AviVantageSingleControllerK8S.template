AWSTemplateFormatVersion: '2010-09-09'
Description: Deploys Single Avi Controller with proper IAM Role, cretes VS and adds
  pool members
Mappings:
  AviAMI:
    ap-northeast-1:
      '1622': ami-a19c48c0
    ap-northeast-2:
      '1622': ami-eb12c785
    ap-south-1:
      '1622': ami-bb9aefd4
    ap-southeast-1:
      '1622': ami-0778a364
    ap-southeast-2:
      '1622': ami-485c6d2b
    eu-central-1:
      '1622': ami-6459aa0b
    eu-west-1:
      '1622': ami-b55824c6
    sa-east-1:
      '1622': ami-cb9303a7
    us-east-1:
      '1622': ami-0191e516
    us-west-1:
      '1622': ami-01703c61
    us-west-2:
      "1711": "ami-12ce5472"
      "1712": "ami-ba5c52c3"
      "1713": "ami-2f243856"
      "1714": "ami-31c8d148"
    us-west-2-priv:
      '1622': ami-0ef4256e
  VersionMap:
    "17.1.1": 
      version: "1711"
    "17.1.2": 
      version: "1712"
    "17.1.3": 
      version: "1713"
    "17.1.4": 
      version: "1714"
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref AviController
  PrivateIp:
    Description: Private IP of Avi Controller
    Value: !GetAtt AviController.PrivateIp
  PublicIp:
    Description: Public IP of Avi Controller
    Value: !GetAtt AviController.PublicIp

Parameters:
  AZId:
    Description: Availability Zone for the deployment
    Type: AWS::EC2::AvailabilityZone::Name
  AviVantageVersion:
    AllowedValues:
    - 17.1.1
    - 17.1.2
    - 17.1.3
    - 17.1.4
    ConstraintDescription: must be a valid Avi Vantage version
    Default: 17.1.4
    Description: The version of Avi Vantage
    Type: String
  InstanceType:
    AllowedValues:
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m3.xlarge
    - m3.2xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    - g2.2xlarge
    - g2.8xlarge
    - hi1.4xlarge
    - hs1.8xlarge
    ConstraintDescription: must be a valid EC2 instance type.
    Default: c4.2xlarge
    Description: Avi Controller instance type
    Type: String
  KeyName:
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
  ManagementNetwork:
    Description: Management network for Avi Controller
    Type: AWS::EC2::Subnet::Id
  ClusterSecurityGroup:
    ConstraintDescription: K8S cluster SecurityGroup
    Type: String
  K8SMaster:
    ConstraintDescription: K8S Master IP
    Type: String
  SSHLocation:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
    Default: 0.0.0.0/0
    Description: The IP address range that can be used to SSH to the EC2 instances
    MaxLength: '18'
    MinLength: '9'
    Type: String
  VpcId:
    Description: VpcId of your existing Virtual Private Cloud (VPC)
    Type: AWS::EC2::VPC::Id
Resources:
  AviControllerEC2Policy:
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - ec2:AllocateAddress
          - ec2:AssignPrivateIpAddresses
          - ec2:AssociateAddress
          - ec2:AttachNetworkInterface
          - ec2:AttachVolume
          - ec2:AuthorizeSecurityGroupEgress
          - ec2:AuthorizeSecurityGroupIngress
          - ec2:CancelConversionTask
          - ec2:CancelImportTask
          - ec2:CreateNetworkInterface
          - ec2:CreateSecurityGroup
          - ec2:CreateSnapshot
          - ec2:CreateTags
          - ec2:CreateVolume
          - ec2:DeleteNetworkInterface
          - ec2:DeleteSecurityGroup
          - ec2:DeleteSnapshot
          - ec2:DeleteTags
          - ec2:DeleteVolume
          - ec2:DeregisterImage
          - ec2:DescribeAddresses
          - ec2:DescribeAvailabilityZones
          - ec2:DescribeConversionTasks
          - ec2:DescribeImageAttribute
          - ec2:DescribeImages
          - ec2:DescribeImportSnapshotTasks
          - ec2:DescribeInstanceAttribute
          - ec2:DescribeInstanceStatus
          - ec2:DescribeInstances
          - ec2:DescribeInternetGateways
          - ec2:DescribeNetworkAcls
          - ec2:DescribeNetworkInterfaceAttribute
          - ec2:DescribeNetworkInterfaces
          - ec2:DescribeRegions
          - ec2:DescribeRouteTables
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSnapshotAttribute
          - ec2:DescribeSnapshots
          - ec2:DescribeSubnets
          - ec2:DescribeTags
          - ec2:DescribeVolumeAttribute
          - ec2:DescribeVolumeStatus
          - ec2:DescribeVolumes
          - ec2:DescribeVpcAttribute
          - ec2:DescribeVpcs
          - ec2:DetachNetworkInterface
          - ec2:DetachVolume
          - ec2:DisassociateAddress
          - ec2:GetConsoleOutput
          - ec2:ImportSnapshot
          - ec2:ImportVolume
          - ec2:ModifyImageAttribute
          - ec2:ModifyInstanceAttribute
          - ec2:ModifyNetworkInterfaceAttribute
          - ec2:ModifySnapshotAttribute
          - ec2:ModifyVolumeAttribute
          - ec2:RebootInstances
          - ec2:RegisterImage
          - ec2:ReleaseAddress
          - ec2:ResetImageAttribute
          - ec2:ResetInstanceAttribute
          - ec2:ResetNetworkInterfaceAttribute
          - ec2:ResetSnapshotAttribute
          - ec2:RevokeSecurityGroupEgress
          - ec2:RevokeSecurityGroupIngress
          - ec2:RunInstances
          - ec2:StartInstances
          - ec2:StopInstances
          - ec2:TerminateInstances
          - ec2:UnassignPrivateIpAddresses
          Effect: Allow
          Resource: '*'
          Sid: Stmt1450393199000
      PolicyName: AviControllerEC2Policy
      Roles:
      - Ref: AviControllerRole
    Type: AWS::IAM::Policy
  AviControllerInstanceProfile:
    Properties:
      Path: /
      Roles:
      - Ref: AviControllerRole
    Type: AWS::IAM::InstanceProfile
  AviControllerRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
        Version: '2012-10-17'
      Path: /
    Type: AWS::IAM::Role
  AviControllerS3Policy:
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - s3:AbortMultipartUpload
          - s3:CreateBucket
          - s3:DeleteBucket
          - s3:DeleteObject
          - s3:GetBucketLocation
          - s3:GetBucketTagging
          - s3:GetObject
          - s3:ListAllMyBuckets
          - s3:ListBucket
          - s3:ListBucketMultipartUploads
          - s3:ListMultipartUploadParts
          - s3:PutBucketTagging
          - s3:PutObject
          Effect: Allow
          Resource:
          - '*'
          Sid: Stmt1450394113000
      PolicyName: AviControllerS3Policy
      Roles:
      - Ref: AviControllerRole
    Type: AWS::IAM::Policy
  AviController:
    Properties:
      IamInstanceProfile:
        Ref: AviControllerInstanceProfile
      ImageId:
        Fn::FindInMap:
        - AviAMI
        - Ref: AWS::Region
        - Fn::FindInMap:
          - VersionMap
          - Ref: AviVantageVersion
          - version
      InstanceType:
        Ref: InstanceType
      KeyName:
        Ref: KeyName
      NetworkInterfaces:
      - AssociatePublicIpAddress: 'true'
        DeleteOnTermination: 'true'
        DeviceIndex: '0'
        GroupSet:
        - Ref: AviSecurityGroup
        - Ref: ClusterSecurityGroup
        SubnetId:
          Ref: ManagementNetwork
      Tags:
      - Key: Name
        Value: AviController
      UserData:
        Fn::Base64:
          Fn::Join:
          - ""
          - - "{\n"
            - " \"META\": {\n"
            - " \"init_config\": {\n"
            - " \"url\": \"http://"
            - Ref: K8SMaster
            - ":8000/setup.json\"\n"
            - "     }\n"
            - "   } \n"
            - "}\n"
    Type: AWS::EC2::Instance
  AviSecurityGroup:
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: '22'
        IpProtocol: tcp
        ToPort: '22'
      - CidrIp: 0.0.0.0/0
        FromPort: '22'
        IpProtocol: tcp
        ToPort: '22'
      - CidrIp: 0.0.0.0/0
        FromPort: '80'
        IpProtocol: tcp
        ToPort: '80'
      - CidrIp: 0.0.0.0/0
        FromPort: '443'
        IpProtocol: tcp
        ToPort: '443'
      - CidrIp: 0.0.0.0/0
        FromPort: '8443'
        IpProtocol: tcp
        ToPort: '8443'
      - CidrIp: 0.0.0.0/0
        FromPort: '123'
        IpProtocol: udp
        ToPort: '123'
      VpcId:
        Ref: VpcId
    Type: AWS::EC2::SecurityGroup

